name: q3c

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  tester:
    name: Test the code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ['ubuntu:18.04']
        compiler: [gcc]
        PGVERSION: [11, 12, 13]
        COVERAGE: ['0']
        APT: ['1']
        include:
          - APT: '0'
            COVERAGE: '1'
            compiler: 'gcc'
          - APT: '0'
            COVERAGE: '0'
            compiler: 'clang'
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: PG cleanup
        run: |
          sudo apt-get -y --purge remove postgresql libpq-dev libpq5 postgresql-client-common postgresql-common
          sudo apt-get -y install python3 python3-pip lcov
          sudo pip install cpp-coveralls
          sudo rm -rf /var/lib/postgresql        
      - if: ${{ matrix.APT == '1' }}
        name: PG APT setup
        run: |
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c "echo deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main ${{ matrix.PGVERSION }} >> /etc/apt/sources.list.d/postgresql.list"
          sudo sh -c "echo deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg-testing main ${{ matrix.PGVERSION }} >> /etc/apt/sources.list.d/postgresql.list"
          sudo apt-get update -qq
          sudo apt-get -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::="--force-confnew" install postgresql-${{ matrix.PGVERSION }} postgresql-server-dev-${{ matrix.PGVERSION }}
          sudo chmod 777 /etc/postgresql/${{ matrix.PGVERSION}}/main/pg_hba.conf
          sudo echo "local   all         postgres                          trust" > /etc/postgresql/${{ matrix.PGVERSION }}/main/pg_hba.conf
          sudo echo "local   all         all                               trust" >> /etc/postgresql/${{ matrix.PGVERSION }}/main/pg_hba.conf
          sudo echo "host    all         all         127.0.0.1/32          trust" >> /etc/postgresql/${{ matrix.PGVERSION }}/main/pg_hba.conf
          sudo echo "host    all         all         ::1/128               trust" >> /etc/postgresql/${{ matrix.PGVERSION }}/main/pg_hba.conf
          sudo /etc/init.d/postgresql restart
          createuser -U postgres -s runner
      - if: ${{ matrix.APT == '0' }}
        name: PG source setup
        run: |
          export CC=${{ matrix.compiler }}
          wget https://ftp.postgresql.org/pub/source/v11.8/postgresql-11.8.tar.bz2
          tar xfj postgresql-11.8.tar.bz2
          mv postgresql-11.8 ../
          cd ../postgresql-11.8/
          if [[ ${{ matrix.COVERAGE} == 1 ]] ; then ./configure --enable-coverage --prefix=$PWD/../pg_install/ ; else ./configure --prefix=$PWD/../pg_install/ ; fi
          make install
          cd ../q3c/
          export PATH=$PWD/../pg_install/bin/:$PATH
          make clean
          ../pg_install/bin/initdb -D ../pg_install/data
          ../pg_install/bin/postgres -D ../pg_install/data &
          sleep 2
          make install
          make test
      - if: ${{ matrix.COVERAGE == '1' }}
        name: Coverall
        run: |
          cpp-coveralls --exclude postgres.h --exclude pg_list.h --exclude stdio2.h --exclude dump.c --gcov-options '\-lp' 
      - name: install
        run: |
          make && sudo make install
      - name: Test
        run: |
          make test

          
